#!/bin/bash

echo "🔍 RepoClone Intelligence: Pre-commit Structure Validation"
echo "=========================================================="

# RepoClone Intelligence - Structure Enforcement
# This hook ensures we maintain the template deployment system structure

VIOLATIONS=0

# Rule 1: No frontend code in backend-logic (except templates)
echo "📋 Checking for frontend code in backend-logic..."
FRONTEND_IN_BACKEND=$(find backend-logic -name "*.tsx" -o -name "*.jsx" -o -name "*.vue" 2>/dev/null | grep -v "project-templates")
if [ ! -z "$FRONTEND_IN_BACKEND" ]; then
    echo "❌ VIOLATION: Frontend files found in backend-logic (outside templates):"
    echo "$FRONTEND_IN_BACKEND"
    VIOLATIONS=$((VIOLATIONS + 1))
fi

# Rule 2: No backend logic in project root (except backend-logic folder and run.js)
echo "📋 Checking for backend logic in project root..."
BACKEND_IN_ROOT=$(find . -maxdepth 1 -name "*.ts" -o -name "*.js" | grep -v "backend-logic" | grep -v "node_modules" | grep -v ".git" | grep -v "run.js")
if [ ! -z "$BACKEND_IN_ROOT" ]; then
    echo "❌ VIOLATION: Backend files found in project root:"
    echo "$BACKEND_IN_ROOT"
    VIOLATIONS=$((VIOLATIONS + 1))
fi

# Rule 3: Projects should be at root level, not inside backend-logic
echo "📋 Checking project structure..."
if [ -d "backend-logic/projects" ]; then
    PROJECTS_IN_BACKEND=$(find backend-logic/projects -maxdepth 1 -type d | grep -v "^backend-logic/projects$" | grep -v "^backend-logic/projects/$")
    if [ ! -z "$PROJECTS_IN_BACKEND" ]; then
        echo "❌ VIOLATION: Projects found inside backend-logic:"
        echo "$PROJECTS_IN_BACKEND"
        echo "💡 Projects should be at root level, not inside backend-logic"
        VIOLATIONS=$((VIOLATIONS + 1))
    fi
fi

# Rule 4: Check for proper template structure
echo "📋 Validating template structure..."
TEMPLATE_DIRS=$(find backend-logic/project-templates -type d -maxdepth 1 2>/dev/null | grep -v "^backend-logic/project-templates$")
for template in $TEMPLATE_DIRS; do
    if [ ! -f "$template/package.json" ] || [ ! -f "$template/README.md" ]; then
        echo "❌ VIOLATION: Incomplete template: $template"
        echo "💡 Templates must have package.json and README.md"
        VIOLATIONS=$((VIOLATIONS + 1))
    fi
done

# Rule 5: Check for self-aware intelligence files
echo "📋 Validating intelligence system..."
INTELLIGENCE_FILES=("README.md" "INTELLIGENCE.md" "STRUCTURE_RULES.md")
for file in "${INTELLIGENCE_FILES[@]}"; do
    if [ ! -f "$file" ]; then
        echo "❌ VIOLATION: Missing intelligence file: $file"
        VIOLATIONS=$((VIOLATIONS + 1))
    fi
done

# Rule 6: Check for GitHub hooks
echo "📋 Validating GitHub hooks..."
if [ ! -f ".hooks/pre-commit" ] || [ ! -f ".hooks/post-commit" ]; then
    echo "❌ VIOLATION: Missing GitHub hooks"
    VIOLATIONS=$((VIOLATIONS + 1))
fi

if [ $VIOLATIONS -gt 0 ]; then
    echo ""
    echo "🚨 RepoClone Intelligence: $VIOLATIONS structure violations detected!"
    echo "💡 This is a template deployment system - maintain clean separation!"
    echo "📚 See INTELLIGENCE.md for structure rules"
    exit 1
else
    echo "✅ RepoClone Intelligence: Structure validation passed!"
    echo "🎯 Template deployment system is properly structured"
fi 